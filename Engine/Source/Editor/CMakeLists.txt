aux_source_directory(${CMAKE_CURRENT_LIST_DIR} SRCS)

add_executable (FishEditor ${SRCS})
target_compile_options(FishEditor PUBLIC -std=c++14)
target_link_libraries(FishEditor ${Boost_LIBRARIES})

target_link_libraries(FishEditor FishEngine)
target_link_libraries(FishEditor imgui)

if (MSVC)
        target_link_libraries(FishEditor opengl32.lib)
	# PhysXSDK
	set(PhysXSDK_ROOT ${CMAKE_CURRENT_LIST_DIR}/../../ThirdParty/PhysXSDK)
	set(PhysXSDK_LIBRARIES_DIR ${PhysXSDK_ROOT}/Lib/vc14win32)
	set(PhysXSDK_LIBRARIES "")
	foreach(x PhysX3 PhysX3Common PhysX3Cooking)
		set(lib1 ${PhysXSDK_LIBRARIES_DIR}/${x}DEBUG_x86.lib)
		set(lib2 ${PhysXSDK_LIBRARIES_DIR}/${x}CHECKED_x86.lib)
		IF(NOT EXISTS ${lib1})
                    message(FATAL_ERROR "physx root directory does not exist: ${lib1}")
  		endif ()
  		IF(NOT EXISTS ${lib2})
                    message(FATAL_ERROR "physx root directory does not exist: ${lib2}")
  		endif ()
		list (APPEND PhysXSDK_LIBRARIES debug ${lib1} optimized ${lib2})
	endforeach()
	foreach(x PhysX3Extensions PhysX3Vehicle PhysXProfileSDK PhysXVisualDebuggerSDK PxTask)
		set(lib1 ${PhysXSDK_LIBRARIES_DIR}/${x}DEBUG.lib)
		set(lib2 ${PhysXSDK_LIBRARIES_DIR}/${x}CHECKED.lib)
		IF(NOT EXISTS ${lib1})
                    message(FATAL_ERROR "physx root directory does not exist: ${lib1}")
  		endif ()
  		IF(NOT EXISTS ${lib2})
                    message(FATAL_ERROR "physx root directory does not exist: ${lib2}")
  		endif ()
		list (APPEND PhysXSDK_LIBRARIES debug ${lib1} optimized ${lib2})
	endforeach()
else()
        FILE(GLOB PhysXSDK_LIBRARIES ${CMAKE_CURRENT_LIST_DIR}/../../ThirdParty/PhysXSDK/Lib/osx64/*.a)
        find_package(zlib)
        target_link_libraries(FishEditor ${ZLIB_LIBRARIES})
        set_target_properties(FishEditor PROPERTIES LINK_FLAGS "-framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo")
endif()

target_link_libraries(FishEditor glfw)
target_link_libraries(FishEditor glew_s)
target_link_libraries(FishEditor assimp)
# message("PhysXSDK: ${PhysXSDK_LIBRARIES}")
target_link_libraries(FishEditor ${PhysXSDK_LIBRARIES})
